plugins {
  id "idea"
}

group 'co.elastic.apm'
version '0.0.1-SNAPSHOT'

defaultTasks("agent:assemble")

subprojects {
  group = rootProject.group
  version = rootProject.version

  apply plugin: "java"
  apply plugin: "maven-publish" //Allows to run ./gradle publishToMavenLocal for easy local testing
  apply plugin: "com.diffplug.spotless"

  ext {
    deps = [
        autoservice: [
            "com.google.auto.service:auto-service:" + catalog.versions.autoservice.get(),
            "com.google.auto.service:auto-service-annotations:" + catalog.versions.autoservice.get(),
        ]
    ]
  }

  repositories {
    mavenLocal()
    mavenCentral()
    maven {
      name = "sonatype"
      url = uri("https://oss.sonatype.org/content/repositories/snapshots")
    }
  }

  spotless {
    java {
      target("src/**/*.java")
      googleJavaFormat()

      licenseHeaderFile(rootProject.file("buildscripts/spotless.license.java"), "(package|import|public)")
          .named("default")

      licenseHeaderFile(rootProject.file("buildscripts/spotless.reallogic.license.java"), "(package|import|public)")
          .named("reallogic")
          .onlyIfContentMatches("package co.elastic.otel.profiler.collections;")

    }
  }

  dependencies {

    implementation(platform(catalog.opentelemetryBom))

    // these serve as a test of the instrumentation boms
    implementation(platform(catalog.opentelemetryInstrumentationBom))
    implementation(platform(catalog.opentelemetryInstrumentationAlphaBom))

    testImplementation("org.mockito:mockito-core:5.5.0")

    testImplementation(enforcedPlatform("org.junit:junit-bom:" + catalog.versions.junit.get().toString()))
    testImplementation("org.junit.jupiter:junit-jupiter")
  }

  tasks {
    test {
      useJUnitPlatform()
    }

    compileJava {
      options.release.set(8)
    }
  }
}

task copyGitHooks(type:Copy) {
  from layout.projectDirectory.dir(".githooks")
  into layout.projectDirectory.dir(".git").dir("hooks")
}

tasks.configure {
  doLast {
    copyGitHooks
  }
}
