plugins {
  id "idea"
}

group 'co.elastic.apm'
version '0.0.1-SNAPSHOT'

defaultTasks("agent:assemble")

subprojects {
  version = rootProject.version

  apply plugin: "java"
  apply plugin: "com.diffplug.spotless"

  ext {
    deps = [
        autoservice: [
            "com.google.auto.service:auto-service:" + libraries.versions.autoservice.get(),
            "com.google.auto.service:auto-service-annotations:" + libraries.versions.autoservice.get(),
        ]
    ]
  }

  repositories {
    mavenCentral()
    maven {
      name = "sonatype"
      url = uri("https://oss.sonatype.org/content/repositories/snapshots")
    }
  }

  spotless {
    java {
      googleJavaFormat()
      licenseHeaderFile(rootProject.file("buildscripts/spotless.license.java"), "(package|import|public)")
      target("src/**/*.java")
    }
  }

  dependencies {

    implementation(platform("io.opentelemetry:opentelemetry-bom:" + libraries.versions.opentelemetrySdk.get().toString()))

    // these serve as a test of the instrumentation boms
    implementation(platform("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom:" + libraries.versions.opentelemetryJavaagent.get().toString()))
    implementation(platform("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom-alpha:" + libraries.versions.opentelemetryJavaagentAlpha.get().toString()))

    testImplementation("org.mockito:mockito-core:5.5.0")

    testImplementation(enforcedPlatform("org.junit:junit-bom:" + libraries.versions.junit.get().toString()))
    testImplementation("org.junit.jupiter:junit-jupiter")
  }

  tasks {
    test {
      useJUnitPlatform()
    }

    compileJava {
      options.release.set(8)
    }
  }
}
