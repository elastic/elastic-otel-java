[versions]
shadow = "8.1.1"
jib = "3.4.2"
spotless = "6.25.0"
junit = "5.10.2"
autoservice = "1.1.1"

# otel protocol (OTLP)
opentelemetryProto = "1.1.0-alpha"

# otel agent, we rely on the '*-alpha' and get the non-alpha dependencies transitively
# updated from upstream agent with .ci/update-upstream.sh
opentelemetryJavaagentAlpha = "2.2.0-alpha"

# otel contrib
# updated from upstream agent with .ci/update-upstream.sh
opentelemetryContribAlpha = "1.33.0-alpha"

[libraries]

# transitively provides 'opentelemetry-instrumentation-bom' (non-alpha)
opentelemetryInstrumentationAlphaBom = { group = "io.opentelemetry.instrumentation", name = "opentelemetry-instrumentation-bom-alpha", version.ref = "opentelemetryJavaagentAlpha" }

opentelemetryProto = { group = "io.opentelemetry.proto", name = "opentelemetry-proto", version.ref = "opentelemetryProto" }

awsContribResources = { group = "io.opentelemetry.contrib", name = "opentelemetry-aws-resources", version.ref = "opentelemetryContribAlpha" }
gcpContribResources = { group = "io.opentelemetry.contrib", name = "opentelemetry-gcp-resources", version.ref = "opentelemetryContribAlpha" }
contribResources = { group = "io.opentelemetry.contrib", name = "opentelemetry-resource-providers", version.ref = "opentelemetryContribAlpha" }

autoservice-processor = { group = "com.google.auto.service", name = "auto-service", version.ref = "autoservice" }
autoservice-annotations = { group = "com.google.auto.service", name = "auto-service-annotations", version.ref = "autoservice" }

assertj-core = "org.assertj:assertj-core:3.25.3"
awaitility = "org.awaitility:awaitility:4.2.1"
findbugs-jsr305 = "com.google.code.findbugs:jsr305:3.0.2"
testcontainers = "org.testcontainers:testcontainers:1.19.7"
logback = "ch.qos.logback:logback-classic:1.5.3"
jackson = "com.fasterxml.jackson.core:jackson-databind:2.17.0"
protobuf-util = "com.google.protobuf:protobuf-java-util:3.25.3"
# last version supporting Java 8
mockito = "org.mockito:mockito-core:4.11.0"
mockserver-client = "org.mock-server:mockserver-client-java:5.15.0"

junitBom = { group = "org.junit", name = "junit-bom", version.ref = "junit" }

okhttp = "com.squareup.okhttp3:okhttp:4.12.0"

lmax-disruptor = "com.lmax:disruptor:3.4.4"
jctools = "org.jctools:jctools-core:4.0.1"
github-api = "org.kohsuke:github-api:1.133"
apachecommons-compress = "org.apache.commons:commons-compress:1.21"
asyncprofiler = "tools.profiler:async-profiler:1.8.3"

freemarker = "org.freemarker:freemarker:2.3.27-incubating"

spotlessPlugin = { group = "com.diffplug.spotless", name = "spotless-plugin-gradle", version.ref = "spotless" }
shadowPlugin = { group = "com.github.johnrengelman", name = "shadow", version.ref = "shadow" }
# Ant should be kept in sync with the version used in the shadow plugin
ant = "org.apache.ant:ant:1.10.14"
# ASM is currently only used during compile-time, so it is okay to diverge from the version used in ByteBuddy
asm = "org.ow2.asm:asm:9.7"

[bundles]

[plugins]

jib = { id = "com.google.cloud.tools.jib", version.ref = "jib" }
spotless = { id = "com.diffplug.spotless:spotless", version.ref = "spotless" }
taskinfo = { id = "org.barfuin.gradle.taskinfo", version = '2.2.0' }
jmh = {id = "me.champeau.jmh", version = "0.7.2"}
nexusPublish = { id = "io.github.gradle-nexus.publish-plugin", version = '2.0.0' }
licenseReport = { id = "com.github.jk1.dependency-license-report", version = "2.6" }
dockerJavaApplication = { id = "com.bmuschko.docker-java-application", version = "9.4.0" }
